#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
clusters:
  - name: "{{ cluster_name }}"
    # Remove undesired services below
    services: [ATLAS, CRUISE_CONTROL, HBASE, HDFS, HIVE, HIVE_ON_TEZ, HUE, IMPALA, INFRA_SOLR, KAFKA, KNOX, KUDU, LIVY, OMID, OOZIE, OZONE, PHOENIX, QUEUEMANAGER, QUERY_PROCESSOR, RANGER, SCHEMAREGISTRY, SOLR, SPARK_ON_YARN, STREAMS_MESSAGING_MANAGER, TEZ, YARN, ZOOKEEPER]
    security:
      kerberos: "{{ kerberos_activated }}"
    repositories:
      - "{{ cdh_repo }}"
      #- "{{ csa_repo }}"
      #- "{{ cfm_repo }}"
      #- "{{ spark3_repo }}"
    configs:
      ATLAS:
        ATLAS_SERVER:
          atlas_admin_password: "{{ default_password }}"
          atlas_authentication_method_file: true
          atlas_solr_replication_factor: 2

      #CRUISE_CONTROL:
      #  CRUISE_CONTROL_SERVER:
      #    security.protocol: "{{ kafka_protocol }}" 

      #FLINK:
      #  FLINK_HISTORY_SERVER:
      #    historyserver_web_port: 8182    

      HBASE:
        SERVICEWIDE:
          hbase_restserver_security_authentication: "{{ hbase_auth }}"
          hadoop_secure_web_ui: "{{ kerberos_activated }}"
          hbase_superuser: "{{ default_admin_user }}"
        REGIONSERVER:  
          hbase_regionserver_wal_codec: org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec

      HDFS:
        SERVICEWIDE:
          dfs_ha_fencing_methods: 'shell(true)'
          dfs_namenode_acls_enabled: true
          hdfs_verify_ec_with_topology_enabled: false
          dfs_permissions_supergroup: admin_group
          core_site_safety_valve: <property><name>hadoop.proxyuser.zeppelin.hosts</name><value>*</value></property><property><name>hadoop.proxyuser.zeppelin.groups</name><value>*</value></property><property><name>dfs.namenode.kerberos.principal.pattern</name><value>*</value></property>
        DATANODE:
          dfs_data_dir_list: /dfs/dn
          dfs_datanode_failed_volumes_tolerated: 0
        NAMENODE:
          dfs_name_dir_list: /dfs/nn
          dfs_federation_namenode_nameservice: "{{ cluster_name }}"
          autofailover_enabled: true
          dfs_namenode_quorum_journal_name: "{{ cluster_name }}"
        JOURNALNODE:
          dfs_journalnode_edits_dir: /dfs/jn  
        SECONDARYNAMENODE:
          fs_checkpoint_dir_list: /dfs/snn

      HIVE:
        HIVEMETASTORE:
          hive_enable_db_notification: true
          hive_metastore_delegation_token_store: org.apache.hadoop.hive.thrift.DBTokenStore
        SERVICEWIDE:
          ranger_security_safety_valve: "<property><name>xasecure.hive.uri.permission.coarse.check</name><value>true</value></property>"

      HIVE_ON_TEZ:
        HIVESERVER2:
          hive_server2_transport_mode: "all"

      HUE:
        SERVICEWIDE:
          auth_backend: desktop.auth.backend.KnoxSpnegoDjangoBackend

      IMPALA:
        IMPALAD:
          scratch_dirs: /tmp/impala
          enable_audit_event_log: true

      INFRA_SOLR:
        SERVICEWIDE:
          enable_ranger_authorization: true

      KAFKA:
        KAFKA_CONNECT: # Change below accordingly to right name of servers 
          bootstrap.servers: "{{ bootstrap_servers }}"

      KNOX:
        SERVICEWIDE:
          knox_encryptquerystring_secret: "{{ default_password }}"
          knox_hadoop_auth_config_signature_secret: "{{ default_password }}"
          conf/gateway-site.xml_service_safety_valve: <property><name>knox.homepage.logout.enabled</name><value>true</value></property>
          knox_homepage_hidden_topologies: "manager,knoxsso,homepage"
          knox_homepage_profile: "full"
        KNOX_GATEWAY:
          gateway_knox_admin_groups: admin_group
          gateway_master_secret: "{{ default_password }}"
          gateway_sso_authentication_provider: "{% if free_ipa == true %}role=authentication#authentication.name=ShiroProvider#authentication.param.sessionTimeout=30#authentication.param.redirectToUrl=/${GATEWAY_PATH}/knoxsso/knoxauth/login.html#authentication.param.restrictedCookies=rememberme,WWW-Authenticate#authentication.param.urls./**=authcBasic#authentication.param.main.ldapRealm=org.apache.knox.gateway.shirorealm.KnoxLdapRealm#authentication.param.main.ldapContextFactory=org.apache.knox.gateway.shirorealm.KnoxLdapContextFactory#authentication.param.main.ldapRealm.contextFactory=$ldapContextFactory#authentication.param.main.ldapRealm.contextFactory.authenticationMechanism=simple#authentication.param.main.ldapRealm.contextFactory.url={{ ipa_ldap_url }}#authentication.param.main.ldapRealm.contextFactory.systemUsername={{ ipa_ldap_user_bind_dn }}#authentication.param.main.ldapRealm.contextFactory.systemPassword={{ ipa_ldap_user_bind_password }}#authentication.param.main.ldapRealm.userDnTemplate=uid={0},{{ ipa_ldap_user_search_base }}#authentication.param.remove=main.pamRealm#authentication.param.remove=main.pamRealm.service{% else %}role=authentication#authentication.name=ShiroProvider#authentication.param.sessionTimeout=30#authentication.param.redirectToUrl=/${GATEWAY_PATH}/knoxsso/knoxauth/login.html#authentication.param.restrictedCookies=rememberme,WWW-Authenticate#authentication.param.main.pamRealm=org.apache.knox.gateway.shirorealm.KnoxPamRealm#authentication.param.main.pamRealm.service=login#authentication.param.urls./**=authcBasic{% endif %}"
          conf/cdp-resources.xml_role_safety_valve: "<property><name>cdp-infra-proxy</name><value>providerConfigRef=sso#SOLR:url=http{% if auto_tls == true %}s{% endif %}://{{ node_infra_solr }}:{% if auto_tls == true %}8995{% else %}8993{% endif %}/solr/#</value><description>CDP INFRA SOLR topology</description></property><property><name>cdp-infra-proxy-api</name><value>providerConfigRef=pam#SOLR:url=https://{{ node_infra_solr }}:8995/solr/#</value><description>CDP INFRA SOLR API topology</description></property>"
          gateway_api_authentication_provider: "{% if free_ipa == true %}role=authentication#authentication.name=ShiroProvider#authentication.param.sessionTimeout=30#authentication.param.redirectToUrl=/${GATEWAY_PATH}/knoxsso/knoxauth/login.html#authentication.param.restrictedCookies=rememberme,WWW-Authenticate#authentication.param.urls./**=authcBasic#authentication.param.main.ldapRealm=org.apache.knox.gateway.shirorealm.KnoxLdapRealm#authentication.param.main.ldapContextFactory=org.apache.knox.gateway.shirorealm.KnoxLdapContextFactory#authentication.param.main.ldapRealm.contextFactory=$ldapContextFactory#authentication.param.main.ldapRealm.contextFactory.authenticationMechanism=simple#authentication.param.main.ldapRealm.contextFactory.url={{ ipa_ldap_url }}#authentication.param.main.ldapRealm.contextFactory.systemUsername={{ ipa_ldap_user_bind_dn }}#authentication.param.main.ldapRealm.contextFactory.systemPassword={{ ipa_ldap_user_bind_password }}#authentication.param.main.ldapRealm.userDnTemplate=uid={0},{{ ipa_ldap_user_search_base }}#authentication.param.remove=main.pamRealm#authentication.param.remove=main.pamRealm.service{% else %}role=authentication#authentication.name=ShiroProvider#authentication.param.sessionTimeout=30#authentication.param.redirectToUrl=/${GATEWAY_PATH}/knoxsso/knoxauth/login.html#authentication.param.restrictedCookies=rememberme,WWW-Authenticate#authentication.param.main.pamRealm=org.apache.knox.gateway.shirorealm.KnoxPamRealm#authentication.param.main.pamRealm.service=login#authentication.param.urls./**=authcBasic{% endif %}"
          
      KUDU:
        SERVICEWIDE:
          time_source: builtin
          builtin_ntp_servers: pool.ntp.org
        KUDU_MASTER:
          fs_wal_dir: /kudu/wal
          fs_data_dirs: /kudu/data
        KUDU_TSERVER:  
          fs_wal_dir: /kudu/wal
          fs_data_dirs: /kudu/data

      LIVY:
        LIVY_SERVER:
          livy_spnego_enabled: "{{ kerberos_activated }}" # Set it to false to disable authentication   

      OZONE:
        SERVICEWIDE:
          ozone.service.id: "{{ cluster_name }}"
          ozone.scm.primordial.node.id: "{{  groups.cluster_master_nodes | first | default(omit) }}"

      SPARK_ON_YARN:
        SERVICEWIDE:
          atlas_service: "atlas"

      RANGER:
        SERVICEWIDE:
          keyadmin_user_password: "{{ default_password }}"
          rangeradmin_user_password: "{{ default_password }}"
          rangertagsync_user_password: "{{ default_password }}"
          rangerusersync_user_password: "{{ default_password }}"
        RANGER_ADMIN:
          ranger.audit.solr.no.replica: 2
          ranger.audit.solr.max.shards.per.node: 2
        RANGER_USERSYNC:
          ranger.usersync.source.impl.class: "{% if free_ipa == true %}org.apache.ranger.ldapusersync.process.LdapUserGroupBuilder{% else %}org.apache.ranger.unixusersync.process.UnixUserGroupBuilder{% endif %}"
          ranger.usersync.ldap.url: "{{ ipa_ldap_url }}"
          ranger.usersync.ldap.binddn: "{{ ipa_ldap_user_bind_dn }}"
          ranger_usersync_ldap_ldapbindpassword: "{{ ipa_ldap_user_bind_password }}"
          ranger.usersync.ldap.user.searchbase: "{{ ipa_ldap_user_search_base }}"
          ranger.usersync.ldap.user.objectclass: "person"
          ranger.usersync.ldap.user.searchfilter: "uid=*"
          ranger.usersync.ldap.user.nameattribute: "uid"
          ranger.usersync.ldap.referral: "follow"
          ranger.usersync.group.searchbase: "{{ ipa_ldap_group_search_base }}"
          ranger.usersync.group.objectclass: "groupofnames"
          ranger.usersync.group.nameattribute: "cn"
          ranger.usersync.group.memberattributename: "member"
          ranger.usersync.group.based.role.assignment.rules: "&ROLE_KEY_ADMIN:g:admin_group&ROLE_SYS_ADMIN:u:{{ default_admin_user }}"

      SCHEMAREGISTRY:
        SERVICEWIDE:
          database_password: "{{ database_default_password }}"
          database_host: "{{ groups.db_server | first | default(omit) }}"
          database_type: "{{ database_type }}"
          database_port: "{{ database_type | default_database_port }}" 
          
      STREAMS_MESSAGING_MANAGER:
        SERVICEWIDE:
          smm_database_password: "{{ database_default_password }}"
          smm_database_type: "{{ database_type }}"
          smm_database_host: "{{ groups.db_server | first | default(omit) }}"
          smm_database_port: "{{ database_type | default_database_port }}"
        STREAMS_MESSAGING_MANAGER_SERVER:  
          kafka.connect.protocol: "{{ kafka_connect_protocol }}"
          kafka.connect.hostports: "{{ groups.cluster_worker_no_hadoop | first | default(omit) }}:{{ kafka_connect_port }}"

      YARN:
        SERVICEWIDE:
          yarn_admin_acl: "${yarn_user},{{ default_admin_user }}"
        RESOURCEMANAGER:
          yarn_scheduler_maximum_allocation_mb: 24576
          yarn_scheduler_maximum_allocation_vcores: 12
        NODEMANAGER:
          yarn_nodemanager_resource_memory_mb: 24576
          yarn_nodemanager_resource_cpu_vcores: 12
          yarn_nodemanager_local_dirs:  /data/nm
          yarn_nodemanager_log_dirs: /var/log/nm
        GATEWAY:
          mapred_submit_replication: 3
          mapred_reduce_tasks: 6    

      ZOOKEEPER:
        SERVICEWIDE:
          zookeeper_datadir_autocreate: true
          
    host_templates:
      Edge:
        #FLINK: [GATEWAY] # Flink is not working  in SSL as it does not have rights on host.jks file
        HBASE: [GATEWAY]
        HDFS: [GATEWAY]
        HIVE: [GATEWAY]
        HIVE_ON_TEZ: [GATEWAY]
        KAFKA: [GATEWAY]
        KNOX: [KNOX_GATEWAY]
        LIVY: [GATEWAY]
        OZONE: [GATEWAY]
        TEZ: [GATEWAY]
        SCHEMAREGISTRY: [GATEWAY]
        SOLR: [GATEWAY]
        SPARK_ON_YARN: [GATEWAY]
        #SPARK3_ON_YARN: [GATEWAY]
        YARN: [GATEWAY]
        
      Master1:
        ATLAS: [ATLAS_SERVER]
        CRUISE_CONTROL: [CRUISE_CONTROL_SERVER]
        #FLINK: [FLINK_HISTORY_SERVER, GATEWAY]
        HBASE: [GATEWAY, HBASETHRIFTSERVER, HBASERESTSERVER]
        HDFS: [JOURNALNODE, GATEWAY, HTTPFS]
        HIVE: [HIVEMETASTORE, GATEWAY]
        HIVE_ON_TEZ: [HIVESERVER2, GATEWAY]
        HUE: [HUE_SERVER, HUE_LOAD_BALANCER]
        INFRA_SOLR: [SOLR_SERVER]
        KAFKA: [GATEWAY]
        KUDU: [KUDU_MASTER]
        LIVY: [GATEWAY]
        OOZIE: [OOZIE_SERVER]
        OZONE: [OZONE_RECON, OZONE_MANAGER, STORAGE_CONTAINER_MANAGER, GATEWAY, S3_GATEWAY]
        # OZONE_PROMETHEUS is not working with TLS
        SCHEMAREGISTRY: [GATEWAY]
        SOLR: [GATEWAY]
        SPARK_ON_YARN: [GATEWAY]
        #SPARK3_ON_YARN: [SPARK3_YARN_HISTORY_SERVER, GATEWAY]
        STREAMS_MESSAGING_MANAGER: [STREAMS_MESSAGING_MANAGER_UI, STREAMS_MESSAGING_MANAGER_SERVER]
        TEZ: [GATEWAY]
        YARN: [GATEWAY]
        ZOOKEEPER: [SERVER]  

      Master2:
        ATLAS: [ATLAS_SERVER]
        #FLINK: [GATEWAY]
        HBASE: [MASTER, HBASERESTSERVER, HBASETHRIFTSERVER, GATEWAY]
        HDFS: [NAMENODE, JOURNALNODE, FAILOVERCONTROLLER, GATEWAY]
        HIVE: [HIVEMETASTORE, GATEWAY]
        HIVE_ON_TEZ: [HIVESERVER2, GATEWAY]
        INFRA_SOLR: [SOLR_SERVER]
        KAFKA: [GATEWAY]
        KUDU: [KUDU_MASTER]
        LIVY: [LIVY_SERVER, GATEWAY]
        OZONE: [OZONE_MANAGER, STORAGE_CONTAINER_MANAGER, GATEWAY]
        PHOENIX: [PHOENIX_QUERY_SERVER]
        SCHEMAREGISTRY: [SCHEMA_REGISTRY_SERVER, GATEWAY]
        RANGER: [RANGER_ADMIN]
        SPARK_ON_YARN: [SPARK_YARN_HISTORY_SERVER, GATEWAY]
        #SPARK3_ON_YARN: [GATEWAY]
        TEZ: [GATEWAY]
        SOLR: [GATEWAY]
        YARN: [RESOURCEMANAGER, JOBHISTORY, GATEWAY]
        ZOOKEEPER: [SERVER]

      Master3:
        #FLINK: [GATEWAY]
        HBASE: [MASTER, GATEWAY]
        HDFS: [NAMENODE, JOURNALNODE, FAILOVERCONTROLLER, GATEWAY]
        HIVE: [GATEWAY]
        HIVE_ON_TEZ: [GATEWAY]
        IMPALA: [STATESTORE, CATALOGSERVER]
        INFRA_SOLR: [SOLR_SERVER]
        KAFKA: [GATEWAY]
        KUDU: [KUDU_MASTER]
        LIVY: [GATEWAY]
        OMID: [OMID_TSO]
        OZONE: [OZONE_MANAGER, STORAGE_CONTAINER_MANAGER, GATEWAY]
        RANGER: [RANGER_TAGSYNC, RANGER_USERSYNC]
        SCHEMAREGISTRY: [GATEWAY]
        QUEUEMANAGER: [QUEUEMANAGER_STORE, QUEUEMANAGER_WEBAPP]
        QUERY_PROCESSOR: [QUERY_PROCESSOR]
        SOLR: [GATEWAY]
        SPARK_ON_YARN: [GATEWAY]
        #SPARK3_ON_YARN: [SPARK3_YARN_HISTORY_SERVER, GATEWAY]
        TEZ: [GATEWAY]
        YARN: [RESOURCEMANAGER, GATEWAY]
        ZOOKEEPER: [SERVER]   
           
      Workers:
        #FLINK: [GATEWAY]
        HBASE: [REGIONSERVER, GATEWAY]
        HDFS: [DATANODE, GATEWAY]
        HIVE: [GATEWAY]
        HIVE_ON_TEZ: [GATEWAY]
        KAFKA: [GATEWAY]
        LIVY: [GATEWAY]
        OZONE: [OZONE_DATANODE, GATEWAY]
        TEZ: [GATEWAY]
        SCHEMAREGISTRY: [GATEWAY]
        SOLR: [GATEWAY]
        SPARK_ON_YARN: [GATEWAY]
        #SPARK3_ON_YARN: [GATEWAY]
        YARN: [NODEMANAGER, GATEWAY]

      WorkersNoHadoop:
        #FLINK: [GATEWAY]
        HIVE: [GATEWAY]
        HIVE_ON_TEZ: [GATEWAY]
        IMPALA: [IMPALAD]
        KAFKA: [KAFKA_BROKER, KAFKA_CONNECT, GATEWAY]
        KUDU: [KUDU_TSERVER]
        LIVY: [GATEWAY]
        TEZ: [GATEWAY]
        SCHEMAREGISTRY: [GATEWAY]
        SOLR: [SOLR_SERVER, GATEWAY]
        SPARK_ON_YARN: [GATEWAY]
        #SPARK3_ON_YARN: [GATEWAY]
      
  # - name: KTS Cluster
  #   type: kts
  #   repositories:
  #     - "{{ cdh_repo }}"   

mgmt:
  name: Cloudera Management Service
  services: [ALERTPUBLISHER, EVENTSERVER, HOSTMONITOR, REPORTSMANAGER, SERVICEMONITOR]
  configs:
    SERVICEWIDE:
      ldap_monitoring_enabled: "{{ free_ipa }}"
    SERVICEMONITOR:
      firehose_heapsize: 2147483648

hosts:
  configs:
    host_default_proc_memswap_thresholds:
      warning: never
      critical: never
    host_memswap_thresholds:
      warning: never
      critical: never
    host_config_suppression_agent_system_user_group_validator: true
    host_clock_offset_thresholds:
      warning: never
      critical: never
