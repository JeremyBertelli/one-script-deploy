---
debug: ${DEBUG}

# Use Datagen as a Service or not
datagen_as_a_service: ${DATAGEN_AS_A_SERVICE}
datagen_repo_url: ${DATAGEN_REPO_URL}
datagen_repo_branch: ${DATAGEN_REPO_BRANCH}

# Minimum settings 
cluster_name: ${CLUSTER_NAME}

# CM info required
cloudera_manager_host: ${NODE_0}
cloudera_manager_user: admin 
cloudera_manager_password: admin

# Ranger info required
ranger_user: admin
ranger_password: ${DEFAULT_PASSWORD}

# Versioning
cdp_version: ${CDH_VERSION}
datagen_version: 1.0.0
dg_full_version: 1.0.0.${CDH_VERSION}
dg_name: DATAGEN-1.0.0.${CDH_VERSION}
distro_suffix: el${OS_VERSION_LAST_DIGIT}
parcel_name: DATAGEN-1.0.0.${CDH_VERSION}-el${OS_VERSION_LAST_DIGIT}

# Cluster Name streaming
cluster_name_streaming: ${CLUSTER_NAME_STREAMING}

# Edge Node for data gen
edge_host: ${EDGE_HOST}

# Not required as they have default settings but can be overrided
launch_generation: true

# Directory where Datagen will be cloned and compiled
target_dir: /root/datagen

# Data Gen Settings
data_gen_git_url: ${DATAGEN_REPO_URL}
data_gen_git_branch: ${DATAGEN_REPO_BRANCH}


##### Old way #####

# Credentials required
kerb_auth: ${KERBEROS}
kerb_user: francois@${REALM}
kerb_keytab: /home/francois/francois.keytab

# Release to get and launch
release_url: ${DATA_LOAD_REPO_URL}


# Add other projects below as the one above


###### OPTIONAL ######
## All below variables could be filled in manually or let the playbook filled them automatically ##
## ##

# keystore: /var/lib/cloudera-scm-agent/agent-cert/cm-auto-host_keystore.jks
# keystore_pass: changeme
# keystore_key_pass: changeme

# user: dev
# hadoop_user: dev
# hadoop_home: /user/dev
# truststore_location: /tmp/truststore.jks

# gen_hdfs: true
# gen_solr: false
# gen_kudu: false
# gen_hbase: false
# gen_ozone: false
# gen_hive: true
# gen_kafka: false

# CM related
# cloudera_manager_api_version:
# cloudera_manager_protocol:
# cloudera_manager_port:
# cloudera_manager_truststore_password_api: 
# cluster_name:
# cdp_version: 

# HDFS related
# hdfs_nameservice:
# hdfs_port:

# HBase related
# hbase_znode:

# Hive related
# tez_queue_name: 
# hive_zk_namespace:

# Kafka Related
# kafka_protocol:
# kafka_url: 

# Kudu Related
# kudu_url: 

# Ozone Related
# ozone_service_id: 

# Ranger Related
# ranger_url:

# Schema Registry Related
# sr_url:

# SolR Related
# solr_url: 

# Zookeeper Related: 
# zk_quorum_with_port: 