---
- set_fact:
    iam_endpoint_api: "{{ cdp_endpoint_url }}/api/v1/iam"

- set_fact:
    env_endpoint_api: "{{ cdp_endpoint_url }}/api/v1/environments2"

- set_fact:
    dex_endpoint_api: "{{ cdp_endpoint_url }}/dex/api/v1"

# First we need to connect with the user to the environment (to upload it to Control Plane)
- name: Get Local Account ID
  uri:
    url: "{{ cdp_endpoint_url }}/authenticate/login?loginRedirect={{ cdp_endpoint_url }}/commonconsole"
    method: GET
    headers: 
      Cookie: "{{ first_cookie }}"
    status_code: [200, 302, 303]
    return_content: yes
    validate_certs: no
    body_format: json
    follow_redirects: no
  register: pvc_call_for_accountid_user

- set_fact:
    account_id_user: "{{ pvc_call_for_accountid_user.location.split('accountId=')[1].split('&')[0] }}" 

- name: DEBUG - account_id_user
  debug:
    msg: "{{ account_id_user }}"
  when: debug | default(false)

- set_fact:
    ldap_connector_id: "{{ pvc_call_for_accountid_user.location.split('idpConnectorId=')[1].split('&')[0] }}" 

- name: DEBUG - ldap_connector_id
  debug:
    msg: "{{ ldap_connector_id }}"
  when: debug | default(false)

- name: Auth to CP with user 
  uri:
    url: "{{ cdp_endpoint_url }}/authenticate/callback/ldap?accountId={{ account_id_user }}&idpConnectorId={{ ldap_connector_id }}&loginRedirect={{ cdp_endpoint_url }}/commonconsole"
    method: POST
    headers: 
      Cookie: "{{ first_cookie }}"
    body: "username={{ user.name }}&password={{ user.password }}"
    status_code: [200, 302, 303]
    return_content: yes
    validate_certs: no
    follow_redirects: no
  register: pvc_call_for_authcookie_user

# Get user CRN

- name: List all users
  uri:
    url: "{{ iam_endpoint_api }}/listUsers"
    method: POST
    headers: 
      Content-Type: application/json
      Cookie: "{{ all_cookies }}"
    body: "{\"pageSize\":500}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: list_users

- set_fact:
    user_crn: "{{ list_users.json | community.general.json_query(query) }}"
  vars:
    query: "users[?workloadUsername == '{{ user.name }}' ].crn | [0]"

- name: DEBUG - user_crn
  debug:
    msg: "{{ user_crn }}"
  when: debug | default(false)

# Assign Roles for a user

- name: Assign user role
  uri:
    url: "{{ iam_endpoint_api }}/assignUserRole"
    method: POST
    headers: 
      Content-Type: application/json
      Cookie: "{{ all_cookies }}"
      Accept: application/json
    body_format: json
    body: "{{ lookup('template', 'assign_role.json') }}"
    status_code: [200, 409]
    return_content: yes
    validate_certs: no
  with_items: "{{ user.roles }}"
  loop_control:
    loop_var: user_role

# Assign Roles per env for a user

- name: Set rights for Environment
  include_tasks: "env_rights.yml"
  with_items: "{{ user.envs }}"
  loop_control:
    loop_var: env

# Add keytab to CDE if needed
- name: Set rights for CDE
  include_tasks: "cde_rights.yml"
  with_items: "{{ user.virtual_clusters }}"
  loop_control:
    loop_var: vc
  when: cde | default(false)



# TODO: Add keytab to CML if needed
# How to get token to access CML (a cdswtoken is required to make requests) ???
# Get cluster id with get to http://ml-7043eff8-00a.apps.apps.laposte-ocp-47.kcloud.cloudera.com/api/v1/site/config and get id.
# Upload password to http://ml-7043eff8-00a.apps.apps.laposte-ocp-47.kcloud.cloudera.com/api/v1/users/admin/kerberos-credentials with request
# {"principal":"test@FRISCH.COM","password":"test1234","clusterId":1} response id 204

