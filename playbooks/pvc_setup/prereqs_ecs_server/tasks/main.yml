---

# Set krb5.conf prereqs also on this node
- name: Comment include dir lines of /etc/krb5.conf
  replace:
    path: /etc/krb5.conf
    regexp: '^(includedir)'
    replace: '#\1'

- name: Resolve ipa_server's IP
  shell: "cat /etc/hosts | grep -m 1 {{ ipa_server }} | cut -d' ' -f1 | xargs"
  register: ipa_server_ip_resolve

- name: Resolve ipa_server's IP
  set_fact: 
    ipa_server_ip: "{{ ipa_server_ip_resolve.stdout }}"

- name: DEBUG - ipa_server's IP
  debug:
    msg: "{{ ipa_server_ip }}"
  when: debug | default(false)

- name: Replace IPA's server hostname with IP
  replace:
    path: /etc/krb5.conf
    regexp: "{{ ipa_server }}"
    replace: "{{ ipa_server_ip }}"


- name: Fetch kubeconfig file
  fetch: 
    src: /etc/rancher/rke2/rke2.yaml
    dest: /tmp/kubeconfig/


# Change core-dns to use dnsmasq set on ecs server

# TODO: No longer needed if PvC is using local dns on each node ???
# - name: Resolve CM server's IP
#   shell: "cat /etc/hosts | grep -m 1 {{ cloudera_manager_host }} | cut -d' ' -f1 | xargs"
#   register: cm_host_ip

# - name: Get core dns to a file
#   shell: /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml -n kube-system get cm rke2-coredns-rke2-coredns -o yaml > rke2-coredns-rke2-coredns.yaml

# - name: Update core dns to point directly to dnsmasq's host
#   replace:
#     path: rke2-coredns-rke2-coredns.yaml
#     regexp: "forward   . /etc/resolv.conf"
#     replace: "forward . {{ cm_host_ip.stdout }}"
#     backup: yes

# - name: Update core dns
#   shell: /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml apply -f rke2-coredns-rke2-coredns.yaml